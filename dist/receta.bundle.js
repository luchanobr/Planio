(()=>{"use strict";var t;!function(t){var n=document.getElementById("receta"),e=1;n.innerHTML='<div class="receta-video"  style=" background: linear-gradient(\n\t\t\trgba(0, 0, 0, 0.3),\n\t\t\trgba(0, 0, 0, 0.3),\n\t\t\trgba(0, 0, 0, 0.3),\n\t\t\trgba(0, 0, 0, 0.3)\n\t\t),\n\t\turl('+t.img+'); background-size: cover">\n\t\t\t\t<div class="w100 h15">\n\t\t\t\t\t<button class="btn-icon white">\n\t\t\t\t\t\t<i class="fas fa-arrow-left"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="w100 d-flex justify-content-center h15">\n\t\t\t\t\t<button class="btn-icon white">\n\t\t\t\t\t\t<i class="far fa-play-circle fa-6x"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="w100 h20">\n\t\t\t\t\t<h1 class="white ml-2 h1">'+t.titulo+'</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id="tabs" class="tabs">\n\t\t\t\t<div class="expand-container">\n\t\t\t\t\t<button class="expand" id="toggle"></button>\n\t\t\t\t</div>\n\t\t\t\t<div class="tab-container" role="tablist">\n\t\t\t\t\t<button class="tab-button black" role="tab" id="tb1">Ingredientes</button>\n\t\t\t\t\t<button class="tab-button" role="tab" id="tb2">Receta</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="brand w100 d-flex justify-content-spaceEvenly mt-1">\n\t\t\t\t\t<select aria-label="porciones" id="porciones" class="select">\n\t\t\t\t\t\t<option value="1">1 porción</option>\n\t\t\t\t\t\t<option value="2">2 porciones</option>\n\t\t\t\t\t\t<option value="3">3 porciones</option>\n\t\t\t\t\t\t<option value="4">4 porciones</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<span class="brand mr-05">\n\t\t\t\t\t\t<i class="far fa-clock fa-sm"></i> '+t.tiempo+'\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class="ml-05">\n\t\t\t\t\t\t<i class="fas fa-dollar-sign fa-sm"></i> '+t.costo+'\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\tid="ingredientes"\n\t\t\t\t\trole="tabpanel"\n\t\t\t\t\tclass="tab-content w100"\n\n\t\t\t\t>\n\t\t\t\t\t<div class="d-flex justify-content-spaceEvenly mt-1 w100">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass="d-flex flex-column justify-content-center text-center small"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>Calorías</span><span id="kcal">'+t.datos.kcal*e+'</span><span>kcal </span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="separador-datos"></div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass="d-flex flex-column justify-content-center text-center small"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>Proteinas</span><span id="prot">'+t.datos.prot*e+'</span><span>Gramos </span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="separador-datos"></div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass="d-flex flex-column justify-content-center text-center small"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>Grasas</span><span id="grasas">'+t.datos.grasas*e+'</span><span>Gramos </span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="separador-datos"></div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass="d-flex flex-column justify-content-center text-center small"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span aria-label="Carbohidratos">Carbs.</span><span id="carbs">'+t.datos.carbs*e+'</span\n\t\t\t\t\t\t\t><span>Gramos </span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                    <ul class="w80 text-light" id="ul-ingredientes">\n\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div id="pasos" class="tab-content w100 display-none" role="tabpanel">\n                    <ol class="w80" id="ol-pasos">\n\t\t\t\t\t</ol>\n                </div>\n\n            </div>';var a=document.getElementById("porciones"),s=document.getElementById("toggle"),i=document.getElementById("tabs"),o=document.getElementById("ingredientes"),l=document.getElementById("pasos");t.ingredientes.map((function(t){var n=document.getElementById("ul-ingredientes"),e=document.createElement("li");e.classList.add("d-flex","justify-content-between","mx-1","my-1"),e.innerHTML="  <span>"+t.item+"</span><span>"+t.cant+"</span>",n.appendChild(e)})),t.pasos.map((function(t,n){var e=document.getElementById("ol-pasos"),a=document.createElement("li");a.innerHTML='<p class="text-light">\n\t\t\t\t\t\t\t\t<span class="h5">Paso '+(n+1)+"</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t"+t+"\n                            </p>",e.appendChild(a)}));var d=0,c=document.getElementById("tb1"),r=document.getElementById("tb2");c.addEventListener("click",(function(){i.classList.contains("expanded")||(i.classList.add("expanded"),i.classList.remove("contraer")),c.classList.add("black"),r.classList.remove("black"),o.classList.remove("display-none"),l.classList.add("display-none")})),r.addEventListener("click",(function(){i.classList.contains("expanded")||(i.classList.add("expanded"),i.classList.remove("contraer")),c.classList.remove("black"),r.classList.add("black"),o.classList.add("display-none"),l.classList.remove("display-none")})),a.addEventListener("change",(function(){e=parseInt(a.value),document.getElementById("kcal").innerHTML=(t.datos.kcal*e).toFixed(0).toString(),document.getElementById("grasas").innerHTML=(t.datos.grasas*e).toFixed(1).toString(),document.getElementById("prot").innerHTML=(t.datos.prot*e).toFixed(1).toString(),document.getElementById("carbs").innerHTML=(t.datos.carbs*e).toFixed(1).toString()})),s.addEventListener("click",(function(){i.classList.contains("expanded")?(i.classList.add("contraer"),i.classList.remove("expanded")):(i.classList.add("expanded"),i.classList.remove("contraer"))})),s.addEventListener("touchstart",(function(t){d=t.changedTouches[0].clientY})),s.addEventListener("touchend",(function(t){var n=t.changedTouches[0].clientY,e=d-n;Math.abs(e)<=30||(e>0?(i.classList.add("expanded"),i.classList.remove("contraer")):(i.classList.add("contraer"),i.classList.remove("expanded")))}))}((t=localStorage.getItem("planio"),JSON.parse(t)).receta||{titulo:"Pollo al limón con verduras",tiempo:"15min",costo:150,img:"assets/img/polloAlLimon.jpg",datos:{kcal:242,prot:7.8,grasas:6.5,carbs:36.6},ingredientes:[{item:"Pollo",cant:"1 kilo"},{item:"Huevos",cant:"2 u"},{item:"Leche",cant:"300 ml"},{item:"Harina",cant:"150 g"},{item:"Pan rallado",cant:"200 g"},{item:"Sal",cant:"5 g"},{item:"Crema bajas caloría",cant:"100 ml"}],pasos:["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, ","Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum","Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,"]})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,